name: Generate ttl.sh image on PR comment

on:
  issue_comment:
    types:
      - created

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/generate' }}
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.sha.outputs.result }}

      - name: React to comment
        uses: actions/github-script@v4
        with:
          script: |
            const {owner, repo} = context.issue;
            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "rocket",
            });

      - name: Build image and push to Docker Hub
        run: |
          docker build -t ttl.sh/kubearmor_${{ steps.sha.outputs.result }} .
          docker push ttl.sh/kubearmor_${{ steps.sha.outputs.result }}

      - name: Message success
        if: ${{ success() }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment succeeded! ✅ Image Tag : `ttl.sh/kubearmor_'+${{ steps.sha.outputs.result }}+'` Image Digest : `'+${{ steps.docker_build.outputs.digest }}+'`',
            });
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment failed! ❌',
            });
